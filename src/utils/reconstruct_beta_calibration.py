# -*- coding: utf-8 -*-

import jax
import jax.numpy as jnp
from jax.nn import sigmoid
from jax.scipy.special import logit
import numpy as np


def beta_calibrate_log_r(log_r, beta_cal_params):

    # a,b,m = beta_cal_params
    # exp_c = (1-m)**b / m**a
    # s = sigmoid(log_r)
    # LR = exp_c *  s**a / (1-s)**b
    # return jnp.log(LR) # = logit(1 / (1 + 1/LR) )

    a, b, m = beta_cal_params
    s = sigmoid(log_r)
    c = b * jnp.log(1-m) - a * jnp.log(m)
    log_LR = c + a * jnp.log(s) - b * jnp.log(1-s)
    return log_LR


if __name__ == '__main__':

    beta_cal_params = jnp.array(
        [1.1977565776555499, 1.1533698094510374, 0.5154849007693468])
    linspace = np.linspace(0, 1, 100)

    results = jnp.array([1.70838780e-19, 3.93395100e-03, 9.08397273e-03, 1.48540456e-02,
                         2.10853252e-02, 2.76957330e-02, 3.46337821e-02, 4.18635778e-02,
                         4.93583313e-02, 5.70970628e-02, 6.50627350e-02, 7.32411132e-02,
                         8.16200276e-02, 9.01888728e-02, 9.89382567e-02, 1.07859746e-01,
                         1.16945675e-01, 1.26189007e-01, 1.35583217e-01, 1.45122210e-01,
                         1.54800247e-01, 1.64611891e-01, 1.74551962e-01, 1.84615499e-01,
                         1.94797726e-01, 2.05094028e-01, 2.15499931e-01, 2.26011079e-01,
                         2.36623218e-01, 2.47332187e-01, 2.58133902e-01, 2.69024346e-01,
                         2.79999560e-01, 2.91055639e-01, 3.02188719e-01, 3.13394975e-01,
                         3.24670616e-01, 3.36011877e-01, 3.47415017e-01, 3.58876316e-01,
                         3.70392071e-01, 3.81958593e-01, 3.93572201e-01, 4.05229228e-01,
                         4.16926008e-01, 4.28658884e-01, 4.40424198e-01, 4.52218296e-01,
                         4.64037521e-01, 4.75878214e-01, 4.87736713e-01, 4.99609351e-01,
                         5.11492453e-01, 5.23382337e-01, 5.35275311e-01, 5.47167672e-01,
                         5.59055705e-01, 5.70935679e-01, 5.82803848e-01, 5.94656449e-01,
                         6.06489698e-01, 6.18299787e-01, 6.30082886e-01, 6.41835135e-01,
                         6.53552645e-01, 6.65231489e-01, 6.76867707e-01, 6.88457290e-01,
                         6.99996187e-01, 7.11480288e-01, 7.22905425e-01, 7.34267364e-01,
                         7.45561790e-01, 7.56784305e-01, 7.67930411e-01, 7.78995500e-01,
                         7.89974836e-01, 8.00863537e-01, 8.11656554e-01, 8.22348646e-01,
                         8.32934348e-01, 8.43407932e-01, 8.53763368e-01, 8.63994260e-01,
                         8.74093786e-01, 8.84054604e-01, 8.93868747e-01, 9.03527476e-01,
                         9.13021095e-01, 9.22338694e-01, 9.31467799e-01, 9.40393866e-01,
                         9.49099542e-01, 9.57563506e-01, 9.65758580e-01, 9.73648360e-01,
                         9.81180550e-01, 9.88271421e-01, 9.94757334e-01, 1.00000000e+00])

    calibrated_log_r = beta_calibrate_log_r(logit(linspace), beta_cal_params)
    results_to_test = sigmoid(calibrated_log_r)
    assert all(np.isclose(results, results_to_test))
